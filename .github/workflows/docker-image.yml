name: Docker Image CI

on:
  push:
    branches: 
      - 'master'
      - 'release/**'
      - 'develop'
      - 'feature/**'
      - 'hotfix/**'
  pull_request:
    branches: 
      - 'master'
      - 'release/**'
      - 'develop'
      - 'feature/**'
      - 'hotfix/**'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag rtlib-docker-image
    - name: Build CI executables
      run: | 
        mkdir -p -v build
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD}/build rtlib-docker-image cmake -DCMAKE_BUILD_TYPE=Release ..
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD}/build rtlib-docker-image make all
    - name: Run UTs
      run: ./build/ci/ut --gtest_output="xml:testresults.xml"
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v1
      with:
        report_paths: 'testresults.xml'
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Run performance tests
      run: ./build/ci/performance_tests
    - name: Generate performace charts
      run: |
        mkdir -p -v reports
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD} rtlib-docker-image python3 ci/performance_tests/convert_json_to_chart.py --json back.json --output reports/back.png
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD} rtlib-docker-image python3 ci/performance_tests/convert_json_to_chart.py --json front.json --output reports/front.png
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD} rtlib-docker-image python3 ci/performance_tests/convert_json_to_chart.py --json middle.json --output reports/middle.png
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD} rtlib-docker-image python3 ci/performance_tests/convert_json_to_chart.py --json non-queue-tree.json --output reports/non-queue-tree.png
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD} rtlib-docker-image python3 ci/performance_tests/convert_json_to_chart.py --json find-16.json --output reports/find-16.png
        docker run --rm --privileged -v ${PWD}:${PWD} -w=${PWD} rtlib-docker-image python3 ci/performance_tests/convert_json_to_chart.py --json find-1024.json --output reports/find-1024.png

    - name: Archive results
      uses: actions/upload-artifact@v2
      with:
        name: performance-reports
        path: reports
